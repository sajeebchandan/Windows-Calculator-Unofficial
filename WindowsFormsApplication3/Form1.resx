<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>